---
import type { Publication } from "../content/publication";

const { publication } = Astro.props as {publication: Publication};

const knownAuthors: Record<string, string> = {
  "Tae Soo Kim": "https://taesookim.com",
  "Juho Kim": "https://juhokim.com/",
  "Joseph Seering": "https://joseph.seering.org/",
  "Yoonjoo Lee": "https://yoonjoolee.com/"
  // 필요할 때마다 추가
};

---
<div class="container">
  <img src={publication.imgPath} />
  <div class="right">
    {publication.mainLink ? 
    <a class="title" href={publication.mainLink} target="_blank">{publication.title}</a>
    :
    <p class="title">{publication.title}</p>
    }
    <p>
      <!-- {publication.authors.map((a, idx) => {
        const link = knownAuthors[a];               // a가 knownAuthors에 있는지
        const className = a === "Heechan Lee" ? "me" : "";
        const separator = idx === publication.authors.length - 1 ? "" : ", ";
        return link ? (
          <a href={link} class={"knownauthor"} target="_blank">
            {a + separator}
          </a>
        ) : (
          <span class={className}>{a + separator}</span>
        );
      })} -->
      {publication.authors.map((a, idx) => {
        const normalized = a.replace("*", "").trim();

        const knownKey = Object.keys(knownAuthors).find(k => normalized.includes(k));
        const link = knownKey ? knownAuthors[knownKey] : undefined;

        const className = a.includes("Heechan Lee") ? "me" : "";
        const separator = idx === publication.authors.length - 1 ? "" : ", ";

        return link ? (
          <a href={link} class="knownauthor" target="_blank">
            {a + separator}
          </a>
        ) : (
          <span class={className}>{a + separator}</span>
        );
      })}
    </p>
    <p class="conference">{publication.conference}</p>
  </div>
</div>

<style>
  p {
    all: unset;
  }
  div.container {
    display: flex;
    flex-direction: row;
    gap: 16px;
    align-items: center;
    height: fit-content;
  }
  div.right {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    min-width: 0;
  }
  p.title {
    font-size: 14px;
    font-weight: 600;
  }
  a.title {
    all: unset;
    font-size: 14px;
    font-weight: 600;
    cursor: pointer;
    text-decoration: underline;
  }
  a.knownauthor {
    font-size: 12px;
    font-weight: 400;
  }
  span {
    font-size: 12px;
  }
  span.me {
    font-weight: 600;
  }
  p.conference {
    font-size: 12px;
  }
  img {
    width: 200px;
    height: auto;
    margin: 0;
    flex-shrink: 0;
  }

  @media (max-width: 768px) {
    div.container {
      display: flex;
      flex-direction: column;
      gap: 16px;
      align-items: center;
    }
    img {
      width: 100%;
      height: auto;
      margin: 0;
      flex-shrink: 0;
    }
  }
</style>